// Details on how to use at the bottom of the file

### Login on the Admin UI
# @name login
POST {{baseUrl}}/api/v1/auth/login/basic/default
Content-Type: application/x-www-form-urlencoded

email={{email}}&password={{password}}

###
@authToken = {{login.response.body.payload.token}}

### List All Bots (need to login first)
GET {{baseUrl}}/api/v1/admin/bots
Authorization: Bearer {{authToken}}
X-BP-Workspace: default

### 
@botId = YOUR_BOT_ID

### Send a request using Converse
POST {{baseUrl}}/api/v1/bots/{{botId}}/converse/benchmarkUser
Content-Type: application/json

{
  "type": "text",
  "text": "hey"
}

@convoId = YOUR_CONVO_ID
@messageId = YOUR_MESSAGE_ID
@userId = YOUR_USER_ID

### Create conversation
POST {{baseUrl}}/api/v1/bots/{{botId}}/messaging/conversations
Content-Type: application/json

{
  "userId": "{{userId}}"
}

### Delete conversation
DELETE {{baseUrl}}/api/v1/bots/{{botId}}/messaging/conversations?id={{convoId}}

### Get conversation
GET {{baseUrl}}/api/v1/bots/{{botId}}/messaging/conversations/{{convoId}}

### List conversations
GET {{baseUrl}}/api/v1/bots/{{botId}}/messaging/conversations?userId={{userId}}&limit=100

### Get or create recent conversation
GET {{baseUrl}}/api/v1/bots/{{botId}}/messaging/conversations/{{userId}}/recent

### Create message
POST {{baseUrl}}/api/v1/bots/{{botId}}/messaging/messages
Content-Type: application/json

{
  "conversationId": 3,
  "eventId": 3434,
  "incomingEventId": 343534,
  "from": "user",
  "payload": {
    "type": "text",
    "text": "hello"
  }
}

### Delete message
DELETE {{baseUrl}}/api/v1/bots/{{botId}}/messaging/messages?id={{messageId}}

### Get message
GET {{baseUrl}}/api/v1/bots/{{botId}}/messaging/messages/{{messageId}}

### List messages
GET {{baseUrl}}/api/v1/bots/{{botId}}/messaging/messages?conversationId={{convoId}}

### Send message
POST {{baseUrl}}/api/v1/bots/{{botId}}/messaging/messages/{{convoId}}/send
Content-Type: application/json

{
  "payload": {
    "type": "text",
    "text": "hello"
  },
  "args": {
    "channel": "http"
  }
}

### Receive message
POST {{baseUrl}}/api/v1/bots/{{botId}}/messaging/messages/{{convoId}}/receive
Content-Type: application/json

{
  "payload": {
    "type": "text",
    "text": "hello"
  },
  "args": {
    "channel": "http"
  }
}

### 

### Test Duckling
POST https://duckling.botpress.io/parse
Content-Type: application/x-www-form-urlencoded

text=hello how are you today
&lang=en
&reftime={{$datetime "xx"}}
&tz=America/Toronto

### Reboot server
POST {{baseUrl}}/api/v1/admin/server/rebootServer
Authorization: Bearer {{authToken}}
X-BP-Workspace: default

### Test Lang Server
GET https://lang-01.botpress.io/info

### Get server archive (pull)
GET {{baseUrl}}/api/v1/admin/versioning/export
Content-Type:application/tar+gzip
Authorization: Bearer {{authToken}}
# Once you get the response, save it to archive.tgz using the second button in the top right of the response window 'Save response body'

### The two following requests requires BPFS_STORAGE=database
### Check for changes
POST {{baseUrl}}/api/v1/admin/versioning/changes
Content-Type: application/xml
Authorization: Bearer {{authToken}}
# Set the absolute path of the archive, or relative to where VS Code was executed from
< ./.rest-client/responses/body/archive.tgz

### Push changes
POST {{baseUrl}}/api/v1/admin/versioning/update
Content-Type: application/xml
Authorization: Bearer {{authToken}}
# Set the absolute path of the archive, or relative to where VS Code was executed from
< ./.rest-client/responses/body/archive.tgz

### SETUP 

#  Use with https://marketplace.visualstudio.com/items?itemName=humao.rest-client

#  1) Configure environment variable in VS Code
#    - Open settings.json and add that snippet (replace vars as wanted for different environments)
# 
# "rest-client.environmentVariables": {
#     "$shared": {
#       "baseUrl": "http://localhost:3000",
#       "email": "admin",
#       "password": "123456"
#     },
#     "local": {
#       "baseUrl": "http://localhost:3000"
#     },
#     "production": {
#       "baseUrl": "https://botpress.com",
#     }
#   }
